---
services:
    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        command: ./start.sh
        volumes:
            - ./backend:/code
        ports:
            - "8000:8000"
        depends_on:
            - db
            - logstash
        env_file:
            - ./backend/.env

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        ports:
            - "8080:80"
        depends_on:
            - backend

    db:
        image: postgres:14
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        environment:
            - "POSTGRES_HOST_AUTH_METHOD=trust"
        env_file:
            - ./backend/.env
        ports:
            - "5432:5432"

    redis:
        image: redis:7.0.5-alpine
        expose:
            - 6379

    worker:
        build:
            context: ./backend
            dockerfile: Dockerfile
        command: celery -A django_project worker -l debug
        deploy:
            replicas: 2
        volumes:
            - ./backend:/code
        depends_on:
            - backend
            - redis
        env_file:
            - ./backend/.env

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
        environment:
            - discovery.type=single-node
        ports:
            - "9200:9200"
        volumes:
            - elasticsearch_data:/usr/share/elasticsearch/data
            - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml

    logstash:
        image: docker.elastic.co/logstash/logstash:7.17.0
        volumes:
            - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
            - ./logstash/pipeline:/usr/share/logstash/pipeline
        depends_on:
            - elasticsearch

networks:
    app:
        driver: bridge

volumes:
    postgres_data:
    elasticsearch_data:
